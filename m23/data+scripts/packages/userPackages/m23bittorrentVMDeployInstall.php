<?PHP
/*
Description: Downloads a VirtualBox appliance via BitTorrent, imports it and makes it usable for all users on the system.
Priority: 50
*/

/*
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

include ("/m23/data+scripts/packages/m23CommonInstallRoutines.php");
include ("/m23/inc/distr/debian/clientConfigCommon.php");

function run($id)
{
    $torrentFile = 'myVm.ova.torrent';
    $ovaStoreFile = '/usr/share/vmimport/myVm.ova';

    // Install needed packages
    CLCFG_aptGet('install', 'bash zenity pwgen openssl virtualbox-4.3 aria2 screen');


    EDIT_writeToFile('/usr/share/applications/MyVM.desktop', '[Desktop Entry]
Version=1.0
Type=Application
Terminal=false
Exec=/usr/bin/VBoxMyVMStart
Comment[de_DE@euro]=myVM
Name=myVM
Comment=myVM starten
Icon=myicon
Categories=Education;
');


    EDIT_writeToFile('/usr/bin/VBoxMyVMChown','#!/bin/bash
# Aufruf über sudo

# Get user name and group of the user who called sudo <this file>
u=$(id -n -u $SUDO_USER)
g=$(id -n -g $SUDO_USER)

(adduser $u vboxusers 2>&1) >> ~/vbox.log

# Change the user and group of VirtualBox
(/bin/chown -R $u.$g /home/vboxglobal/.VirtualBox/ /home/vboxglobal/VirtualBox* 2>&1) >> ~/vbox.log');





EDIT_writeToFile('/home/vboxglobal/.VirtualBox/VirtualBox.xml', '<?xml version="1.0"?>
<!--
** DO NOT EDIT THIS FILE.
** If you make changes to this file while any VirtualBox related application
** is running, your changes will be overwritten later, without taking effect.
** Use VBoxManage or the VirtualBox Manager GUI to make changes.
-->
<VirtualBox xmlns="http://www.innotek.de/VirtualBox-settings" version="1.12-linux">
<Global>
	<USBDeviceFilters/>
	<ExtraData>
	<ExtraDataItem name="GUI/RegistrationData" value="triesLeft=0"/>
	<ExtraDataItem name="GUI/UpdateDate" value="never"/>
	<ExtraDataItem name="GUI/SuppressMessages" value=",remindAboutAutoCapture"/>
	</ExtraData>
	<MachineRegistry/>
	<MediaRegistry>
	<HardDisks/>
	<DVDImages/>
	<FloppyImages/>
	</MediaRegistry>
	<SystemProperties defaultMachineFolder="/home/vboxglobal/.VirtualBox/vms/" defaultHardDiskFormat="VDI" VRDEAuthLibrary="VBoxAuth" webServiceAuthLibrary="VBoxAuth" LogHistoryCount="3" exclusiveHwVirt="true"/>
</Global>
</VirtualBox>');





EDIT_writeToFile('/usr/bin/VBoxMyVMStart',"#!/bin/bash

# Check, if an instance of VirtualBox is running
if [ $(ps -Al | grep VirtualBox -c) -gt 0 ]
then
	zenity --error --text='Läuft bereits eine VirtualBox-Instanz (ggf. von einem anderen Benutzer).\n\nBitte vorher alle anderen VirtualBox-Instanzen schließen.'
	exit 1
fi

# Change the user permissions
(sudo /usr/bin/VBoxMyVMChown 2>&1) >> ~/vbox.log

if [ ! -d /home/vboxglobal/.VirtualBox ]
then
	zenity --error --text='Der globale VirtualBox-Benutzer existiert nicht!'
	exit 2
fi

# Check, if the home directory is stored on a SAMBA share
if [ $(mount | grep cifs | grep ~ -c) -gt 0 ]
then
	(mkdir -p ~/.VirtualBox) >> ~/vbox.log
	(cp /home/vboxglobal/.VirtualBox/VirtualBox.xml ~/.VirtualBox) >> ~/vbox.log
else
	# Make sure the global VirtualBox settings will be used
	(rm -r ~/.VirtualBox 2>&1) >> ~/vbox.log
	(ln -s /home/vboxglobal/.VirtualBox ~ 2>&1) >> ~/vbox.log

	(rm -r ~/VirtualBox* 2> /dev/null 2>&1) >> ~/vbox.log
	(ln -s /home/vboxglobal/VirtualBox* ~ 2>&1) >> ~/vbox.log

	(VBoxManage registervm ~/VirtualBox\ VMs/MyVM/MyVM.vbox 2>&1) >> ~/vbox.log
fi

# Start the VM
(VirtualBox --startvm MyVM& 2>&1) >> ~/vbox.log");





    echo('#Create the user
if [ ! -d /home/vboxglobal ]
then
	RET=$(pwgen 32 1)

	#Create the encrypted password
	cpass=`echo "$RET" | openssl passwd -stdin -1`

	#Create user with home directory
	useradd -m -g users -d "/home/vboxglobal" -s /bin/bash -p "$cpass" "vboxglobal"

	#Add the user to the audio group
	adduser vboxglobal vboxusers
fi

# Add sudoers rule to let ALL users call /usr/bin/VBoxMyVMChown
if [ $(grep -c "^ALL          ALL=NOPASSWD:/usr/bin/VBoxMyVMChown" /etc/sudoers) -eq 0 ]
then
       echo "ALL          ALL=NOPASSWD:/usr/bin/VBoxMyVMChown" >> /etc/sudoers
fi
');





echo("
# Make the VM import file accessible for all users
chmod 755 $ovaStoreFile

# Create the directory for storing the vms and their information
(mkdir -p /home/vboxglobal/.VirtualBox/vms 2>&1) >> /vbox.log

# Make sure the files belong to the correct user
(chown vboxglobal -R /home/vboxglobal/ 2>&1) >> /vbox.log

# Delete old VM import file
(rm $ovaStoreFile 2>&1) >> /vbox.log
");





    // Download the appliance via BitTorrent
    BT_dlFile($torrentFile, dirname($ovaStoreFile));





echo('
    #Make sure that /home/vboxglobal/.VirtualBox is owned by vboxglobal
sudo su - vboxglobal -c "sudo /usr/bin/VBoxMyVMChown"
ls -l /usr/bin/VBoxMyVMChown >> /vbox.log

# Remove the old VM
(sudo su - vboxglobal -c "VBoxManage unregistervm --delete MyVM" 2>&1) >> /vbox.log
# Import the new VM
(sudo su - vboxglobal -c "VBoxManage import '.$ovaStoreFile.'" 2>&1) >> /vbox.log

# Check, if there is set a HTTP proxy
if [ $(grep \'http::Proxy\' /etc/apt/apt.conf.d/70debconf -c) -gt 0 ]
then
	http_proxy=$(grep \'http::Proxy\' /etc/apt/apt.conf.d/70debconf | cut -d\'"\' -f2)
	export http_proxy
fi

# Download and install extension pack
cd /tmp
vboxBaseURL="http://download.virtualbox.org/virtualbox/$(VBoxManage --version | sed \'s/r.*//\')/"
wget "$vboxBaseURL" -O vboxextlst
vboxExtName=$(grep -i HREF vboxextlst | sed \'s/"/\n/g\' | grep extpack$ | sort -u | head -1)
wget $vboxBaseURL$vboxExtName
VBoxManage extpack install --replace /tmp/$(basename "$vboxBaseURL$vboxExtName")

# Make sure the files belong to the correct user
chown vboxglobal -R /home/vboxglobal/

# Remove the cip user
sed -i \'/^cip ALL/d\' /etc/sudoers
');
    



	sendClientStatus($id,"done");
	executeNextWork();
};
?>